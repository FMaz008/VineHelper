class DeviceMgr {
	constructor(settings) {
		this.deviceId = null;
		this.deviceFingerprint = null;
		this.deviceName = null;
		this.settings = settings;
	}

	async generateDeviceName(save = true) {
		// Dictionary of adjectives and nouns for device name generation
		const adjectives = [
			"Brass",
			"Steam",
			"Clockwork",
			"Mechanical",
			"Copper",
			"Iron",
			"Gilded",
			"Ornate",
			"Polished",
			"Riveted",
			"Geared",
			"Cogwheel",
			"Pneumatic",
			"Hydraulic",
			"Galvanic",
			"Aetheric",
			"Antiquated",
			"Automated",
			"Baroque",
			"Burnished",
			"Calibrated",
			"Clanking",
			"Contrapted",
			"Coppery",
			"Corroded",
			"Dapper",
			"Dexterous",
			"Dirigible",
			"Distinguished",
			"Eccentric",
			"Elaborate",
			"Embellished",
			"Engineered",
			"Engraved",
			"Etched",
			"Filigreed",
			"Flamboyant",
			"Gaslit",
			"Genteel",
			"Gleaming",
			"Gothic",
			"Gritty",
			"Hissing",
			"Industrial",
			"Ingenious",
			"Intricate",
			"Inventive",
			"Lacquered",
			"Leathern",
			"Locomotive",
			"Machined",
			"Mahogany",
			"Meticulous",
			"Monocled",
			"Motorized",
			"Oiled",
			"Opulent",
			"Patinated",
			"Peculiar",
			"Piston-driven",
			"Precise",
			"Pressurized",
			"Prim",
			"Proper",
			"Rattling",
			"Refined",
			"Regal",
			"Resourceful",
			"Retrofitted",
			"Rusted",
			"Scholarly",
			"Scientific",
			"Screwdriven",
			"Sepia",
			"Sophisticated",
			"Sprocketed",
			"Stately",
			"Stovepipe",
			"Tarnished",
			"Technical",
			"Ticking",
			"Tinkered",
			"Top-hatted",
			"Turbine",
			"Valved",
			"Varnished",
			"Victorian",
			"Vintage",
			"Whirring",
			"Whistling",
			"Windup",
			"Wrought",
			"Zeppelin",
			"Alchemical",
			"Analytical",
			"Arcane",
			"Aristocratic",
			"Armored",
			"Articulated",
			"Automatous",
			"Bewhiskered",
			"Bespectacled",
			"Boilered",
			"Bolted",
			"Bronzed",
			"Bustled",
			"Calculated",
			"Chained",
			"Chimneyed",
			"Chromed",
			"Clanging",
			"Cogged",
			"Combustive",
			"Corsetted",
			"Crafted",
			"Cranked",
			"Crinolined",
			"Dashing",
			"Distilled",
			"Dynastic",
			"Elegant",
			"Elevated",
			"Enameled",
			"Enginematic",
			"Exploratory",
			"Fanciful",
			"Forged",
			"Formal",
			"Fueled",
			"Fumigated",
			"Furnished",
			"Gadgeted",
			"Gauged",
			"Gentlemanly",
			"Goggled",
			"Gramophonic",
			"Grandiloquent",
			"Greased",
			"Handcrafted",
			"Harnessed",
			"Hatted",
			"Hinged",
			"Horologous",
			"Illustrious",
			"Industrious",
			"Inked",
			"Innovative",
			"Keyed",
			"Kinetic",
			"Lamplit",
			"Levered",
			"Lustrous",
			"Magnified",
			"Majestic",
			"Measured",
			"Mechanized",
			"Mercurial",
			"Meshed",
			"Metallic",
			"Methodical",
			"Microscopic",
			"Minted",
			"Monocular",
			"Navigational",
			"Observant",
			"Operatic",
			"Oscillating",
			"Pendulous",
			"Perambulating",
			"Phonographic",
			"Pipeworked",
			"Plumed",
			"Pocketwatched",
			"Polite",
			"Pragmatic",
			"Precision",
			"Pristine",
			"Propellered",
			"Pumping",
			"Quaint",
			"Ratcheted",
			"Regulated",
			"Resonant",
			"Retro",
			"Revolutionary",
			"Riveting",
			"Rotary",
			"Scholarly",
			"Screwed",
			"Sealed",
			"Shining",
			"Smoking",
			"Sooty",
			"Sprung",
			"Stalwart",
			"Starched",
			"Stately",
			"Steadfast",
			"Steely",
			"Stiff",
			"Stoic",
			"Tailored",
			"Telegraphic",
			"Telescopic",
			"Tethered",
			"Theatrical",
			"Thermodynamic",
			"Timed",
			"Tinned",
			"Tooled",
			"Transmutative",
			"Trimmed",
			"Tubed",
			"Turbulent",
			"Tweeded",
			"Valiant",
			"Vaporized",
			"Vested",
			"Vibrating",
			"Watchful",
			"Waistcoated",
			"Wheeled",
			"Whiskered",
			"Wound",
		];

		// Dictionary of prefixes for device name generation - to be added to the beginning of nouns
		const prefixes = [
			// Universal prefixes
			"Ultra",
			"Mega",
			"Super",
			"Hyper",
			"Omni",
			"Multi",
			"Poly",
			"Tri",
			"Bi",
			"Mono",
			"Neo",
			"Retro",
			"Proto",
			"Pseudo",
			"Quasi",
			"Semi",
			"Demi",
			"Mini",
			"Micro",
			"Macro",
			"Arch",
			"Meta",
			"Para",
			"Trans",
			"Inter",
			"Intra",
			"Extra",
			"Infra",
			"Supra",
			"Exo",
			"Endo",
			"Iso",
			"Holo",
			"Nano",
			"Pico",
			"Giga",
			"Tera",
			"Peta",
			"Exa",
			"Zetta",

			// Victorian/Steampunk themed prefixes
			"Steam",
			"Brass",
			"Iron",
			"Copper",
			"Bronze",
			"Silver",
			"Gold",
			"Aether",
			"Vapor",
			"Cog",
			"Gear",
			"Clock",
			"Chrono",
			"Mecha",
			"Techno",
			"Electro",
			"Galvano",
			"Thermo",
			"Hydro",
			"Pneumo",
			"Gyro",
			"Astro",
			"Aero",
			"Loco",
			"Velo",
			"Dynamo",
			"Magneto",
			"Oscillo",
			"Tele",
			"Phono",
			"Gramo",
			"Kaleido",
			"Spectro",
			"Lumino",
			"Helio",
			"Pyro",
			"Cryo",
			"Quantum",
			"Atomic",
			"Etheric",
			"Arcane",
			"Imperial",
			"Royal",
			"Alchemic",
			"Mechano",
			"Clocko",
			"Pendulo",
			"Differentia",
			"Analytical",
			"Babbage",
			"Lovelace",
			"Difference",
			"Calculating",
			"Arithmo",
			"Cogito",
			"Mechanico",
			"Artificio",
			"Industria",
			"Victoriana",
			"Edwardian",
			"Baroque",
			"Gothic",
			"Ornato",
			"Embellisho",
			"Grandio",
			"Magnifico",
			"Splendido",
			"Opulento",
			"Luxurio",
			"Telegrapho",
			"Velocito",
			"Dirigiblo",
			"Zeppelino",
			"Balloono",
			"Aeronauto",
			"Submersiblo",
			"Nautilo",
			"Oceano",
			"Vulcano",
			"Ferrous",
			"Mercurio",
			"Tungsteno",
			"Vanadio",
			"Titano",
			"Platino",
		];
		const nouns = [
			"Automaton",
			"Dirigible",
			"Cogwheel",
			"Aether",
			"Steamship",
			"Clockwork",
			"Locomotive",
			"Zeppelin",
			"Airship",
			"Gadgetry",
			"Contraption",
			"Apparatus",
			"Mechanica",
			"Chronometer",
			"Ornithopter",
			"Velocipede",
			"Gearbox",
			"Boiler",
			"Piston",
			"Turbine",
			"Sprocket",
			"Flywheel",
			"Bellows",
			"Furnace",
			"Steamworks",
			"Dynamo",
			"Regulator",
			"Condenser",
			"Compressor",
			"Valve",
			"Gasket",
			"Rivet",
			"Cog",
			"Lever",
			"Pulley",
			"Crankshaft",
			"Camshaft",
			"Escapement",
			"Pendulum",
			"Gyroscope",
			"Barometer",
			"Manometer",
			"Galvanometer",
			"Telegraph",
			"Phonograph",
			"Gramophone",
			"Periscope",
			"Kaleidoscope",
			"Astrolabe",
			"Sextant",
			"Compass",
			"Orrery",
			"Typewriter",
			"Armature",
			"Commutator",
			"Stator",
			"Rotor",
			"Propeller",
			"Rudder",
			"Ballast",
			"Gondola",
			"Mooring",
			"Envelope",
			"Gasbag",
			"Thermometer",
			"Hygrometer",
			"Anemometer",
			"Weathervane",
			"Sundial",
			"Hourglass",
			"Metronome",
			"Harmonium",
			"Orchestrion",
			"Pianola",
			"Carillon",
			"Calliope",
			"Microscope",
			"Telescope",
			"Spectroscope",
			"Stereoscope",
			"Phantascope",
			"Zoetrope",
			"Praxinoscope",
			"Heliograph",
			"Kinetoscope",
			"Mutoscope",
			"Vitascope",
			"Gaslight",
			"Lantern",
			"Chandelier",
			"Sconce",
			"Candelabra",
			"Smokestack",
			"Chimney",
			"Ventilator",
			"Radiator",
			"Pipework",
			"Conduit",
			"Flue",
			"Duct",
			"Mechanism",
			"Contrivance",
			"Invention",
			"Fabrication",
			"Assemblage",
			"Artifice",
			"Machination",
			"Ingenuity",
			"Wheelwork",
			"Clockface",
			"Mainspring",
			"Tourbillon",
			"Fusee",
			"Verge",
			"Anchor",
			"Pinion",
			"Ratchet",
			"Pawl",
			"Detent",
			"Automaton",
			"Dirigible",
			"Cogwheel",
			"Aether",
			"Steamship",
			"Clockwork",
			"Locomotive",
			"Zeppelin",
			"Airship",
			"Gadgetry",
			"Contraption",
			"Apparatus",
			"Mechanica",
			"Chronometer",
			"Ornithopter",
			"Velocipede",
			"Gearbox",
			"Boiler",
			"Piston",
			"Turbine",
			"Sprocket",
			"Flywheel",
			"Bellows",
			"Furnace",
			"Steamworks",
			"Dynamo",
			"Regulator",
			"Condenser",
			"Compressor",
			"Valve",
			"Gasket",
			"Rivet",
			"Cog",
			"Lever",
			"Pulley",
			"Crankshaft",
			"Camshaft",
			"Escapement",
			"Pendulum",
			"Gyroscope",
			"Barometer",
			"Manometer",
			"Galvanometer",
			"Telegraph",
			"Phonograph",
			"Gramophone",
			"Periscope",
			"Kaleidoscope",
			"Astrolabe",
			"Sextant",
			"Compass",
			"Orrery",
			"Typewriter",
			"Armature",
			"Commutator",
			"Stator",
			"Rotor",
			"Propeller",
			"Rudder",
			"Ballast",
			"Gondola",
			"Mooring",
			"Envelope",
			"Gasbag",
			"Thermometer",
			"Hygrometer",
			"Anemometer",
			"Weathervane",
			"Sundial",
			"Hourglass",
			"Metronome",
			"Harmonium",
			"Orchestrion",
			"Pianola",
			"Carillon",
			"Calliope",
			"Microscope",
			"Telescope",
			"Spectroscope",
			"Stereoscope",
			"Phantascope",
			"Zoetrope",
			"Praxinoscope",
			"Heliograph",
			"Kinetoscope",
			"Mutoscope",
			"Vitascope",
			"Gaslight",
			"Lantern",
			"Chandelier",
			"Sconce",
			"Candelabra",
			"Smokestack",
			"Chimney",
			"Ventilator",
			"Radiator",
			"Pipework",
			"Conduit",
			"Flue",
			"Duct",
			"Mechanism",
			"Contrivance",
			"Invention",
			"Fabrication",
			"Assemblage",
			"Artifice",
			"Machination",
			"Ingenuity",
			"Wheelwork",
			"Clockface",
			"Mainspring",
			"Tourbillon",
			"Fusee",
			"Verge",
			"Anchor",
			"Pinion",
			"Ratchet",
			"Pawl",
			"Detent",
		];

		// Randomly select one adjective and one noun
		const randomAdjective = adjectives[Math.floor(Math.random() * adjectives.length)];
		const randomPrefix = prefixes[Math.floor(Math.random() * prefixes.length)];
		const randomNoun = nouns[Math.floor(Math.random() * nouns.length)];

		// Generate model suffix (random capital letter + 3 numbers)
		const randomLetter = String.fromCharCode(65 + Math.floor(Math.random() * 26)); // A-Z
		const randomNumbers = Math.floor(Math.random() * 1000)
			.toString()
			.padStart(3, "0");
		const modelSuffix = `${randomLetter}-${randomNumbers}`;

		const deviceName = `${randomAdjective} ${randomPrefix} ${randomNoun} ${modelSuffix}`; // Combine them to create a device name

		if (save) {
			await this.settings.set("general.deviceName", deviceName);
			this.deviceName = deviceName;
		}
		return deviceName;
	}

	async setDeviceName(name) {
		if (!name) {
			throw new Error("Device name is required");
		}

		await this.settings.set("general.deviceName", name);
		this.deviceName = name;
		return name;
	}

	getDeviceName() {
		return this.settings.get("general.deviceName");
	}
}

export { DeviceMgr };
